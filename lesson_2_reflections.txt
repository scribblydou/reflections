What happens when you initialize a repository?
Why do you need to do it?
You create a repository to create a log on all
the commits you will be making on the files.
Initializing a repository creates a .git file
in the folder that holds all the files.

How is the staging area different from the
working directory and the repository?
What value do you think it offers?
The staging area is where commits are stored
once you have made some changes on a file. The
working directory just holds all the files
of a certain project, and the repository saves
all commits and previous versions. You can still
think of the changes you made on a commit
before pushing them into the repository.

How can you use staging area to make sure you
have one commit per logical change?
By adding a text message to describe the changes
made before a staged change is commited.

What are some situations when branches would
be helpful in keeping your history
organized? How would branches help?
When you want to experiment with a new version
but want to keep the original version, creating a
branch is very convenient, making it possible
to work on several versions of the same program.

How do diagrams help you visualize the branch
structure?
It helps us by showing at what point in the master
branch do other branches start.

What is the result of merging two branches
together? Why do we represent it in the diagram
the way we do?
The result is an updated master file with changes
from a branch incorporated. The diagram form
makes it readable and easy to understand when
which changes were made.












